# Generated by Django 2.1.5 on 2020-05-20 15:23

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import model_mixins
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        ('git_real', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgileCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('B', 'Blocked'), ('R', 'Ready'), ('IP', 'In Progress'), ('RF', 'Review Feedback'), ('IR', 'Review'), ('C', 'Complete')], max_length=2)),
                ('order', models.PositiveIntegerField(default=0)),
                ('is_hard_milestone', models.BooleanField()),
                ('is_soft_milestone', models.BooleanField()),
                ('assignees', models.ManyToManyField(blank=True, related_name='assigned_agile_cards', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.CreateModel(
            name='ContentItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_type', models.CharField(choices=[('P', 'project'), ('T', 'topic'), ('W', 'workshop')], max_length=1)),
                ('title', models.CharField(max_length=150, null=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, max_length=150, null=True, populate_from='title')),
                ('url', models.URLField(blank=True, max_length=2083, null=True, unique=True)),
                ('story_points', models.SmallIntegerField(choices=[(1, 1), (2, 2), (3, 3), (5, 5), (8, 8), (13, 13), (21, 21), (34, 34), (56, 56), (89, 89)], null=True)),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.CreateModel(
            name='ContentItemOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hard_requirement', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pre_ordered_content', to='curriculum_tracking.ContentItem')),
                ('pre', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='post_ordered_content', to='curriculum_tracking.ContentItem')),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.CreateModel(
            name='CurriculumContentRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hard_requirement', models.BooleanField(default=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('content_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum_tracking.ContentItem')),
                ('curriculum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_requirements', to='core.Curriculum')),
            ],
            options={
                'ordering': ['order'],
            },
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.CreateModel(
            name='RecruitProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_time', models.DateTimeField(blank=True, null=True)),
                ('submission_time', models.DateTimeField(blank=True, null=True)),
                ('content_item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curriculum_tracking.ContentItem')),
                ('recruit_users', models.ManyToManyField(related_name='recruit_projects', to=settings.AUTH_USER_MODEL)),
                ('repository', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='git_real.Repository')),
                ('reviewer_users', models.ManyToManyField(related_name='projects_to_review', to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.CreateModel(
            name='RecruitProjectReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('NYC', 'not yet competent'), ('C', 'competent'), ('E', 'excellent'), ('R', 'red flag')], max_length=3, null=True)),
                ('timestamp', models.DateTimeField()),
                ('comments', models.TextField()),
                ('recruit_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_reviews', to='curriculum_tracking.RecruitProject')),
                ('reviewer_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.AddField(
            model_name='contentitem',
            name='prerequisites',
            field=models.ManyToManyField(related_name='unlocks', through='curriculum_tracking.ContentItemOrder', to='curriculum_tracking.ContentItem'),
        ),
        migrations.AddField(
            model_name='contentitem',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='agilecard',
            name='content_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='curriculum_tracking.ContentItem'),
        ),
        migrations.AddField(
            model_name='agilecard',
            name='recruit_project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agile_card', to='curriculum_tracking.RecruitProject'),
        ),
        migrations.AddField(
            model_name='agilecard',
            name='reviewers',
            field=models.ManyToManyField(blank=True, related_name='agile_cards_to_review', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='recruitproject',
            unique_together={('content_item', 'repository')},
        ),
        migrations.AlterUniqueTogether(
            name='contentitemorder',
            unique_together={('pre', 'post')},
        ),
        migrations.AlterUniqueTogether(
            name='contentitem',
            unique_together={('content_type', 'title')},
        ),
    ]
