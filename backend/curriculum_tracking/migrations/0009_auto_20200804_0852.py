# Generated by Django 2.1.5 on 2020-08-04 08:52

import autoslug.fields
import curriculum_tracking.validators
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
        ('curriculum_tracking', '0008_auto_20200713_1102'),
    ]

    operations = [
        migrations.CreateModel(
            name='ContentAvailableFlavour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.AddField(
            model_name='agilecard',
            name='content_flavours',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='agilecard',
            name='requires_cards',
            field=models.ManyToManyField(related_name='required_by_cards', to='curriculum_tracking.AgileCard'),
        ),
        migrations.AddField(
            model_name='contentitem',
            name='continue_from_repo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='curriculum_tracking.ContentItem'),
        ),
        migrations.AddField(
            model_name='contentitem',
            name='project_submission_type',
            field=models.CharField(blank=True, choices=[('R', 'repo'), ('L', 'link'), ('C', 'continue_repo'), ('N', 'nosubmit')], max_length=1, null=True),
        ),
        migrations.AddField(
            model_name='contentitem',
            name='template_repo',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='contentitem',
            name='topic_needs_review',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='curriculumcontentrequirement',
            name='flavours',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='recruitproject',
            name='flavours',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='topicprogress',
            name='flavours',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='workshopattendance',
            name='flavours',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterField(
            model_name='contentitem',
            name='slug',
            field=autoslug.fields.AutoSlugField(default='slug', editable=False, max_length=150, populate_from='title'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='contentitem',
            name='title',
            field=models.CharField(default='title needed', max_length=150),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='contentitem',
            name='url',
            field=models.URLField(blank=True, max_length=2083, null=True, unique=True, validators=[curriculum_tracking.validators.validate_content_item_url]),
        ),
        migrations.AddField(
            model_name='contentavailableflavour',
            name='content_item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='curriculum_tracking.ContentItem'),
        ),
        migrations.AddField(
            model_name='contentavailableflavour',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='taggit.Tag'),
        ),
        migrations.AddField(
            model_name='contentitem',
            name='available_flavours',
            field=models.ManyToManyField(blank=True, related_name='content_with_flavour', through='curriculum_tracking.ContentAvailableFlavour', to='taggit.Tag'),
        ),
    ]
