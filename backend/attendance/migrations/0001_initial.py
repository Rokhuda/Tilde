# Generated by Django 2.1.5 on 2020-05-20 15:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import model_mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AfternoonAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('date', models.DateField()),
                ('still_on_track', models.BooleanField()),
                ('reason_for_not_on_track', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('late_reason', models.TextField(blank=True, null=True)),
                ('score', models.SmallIntegerField()),
                ('is_staff', models.BooleanField(null=True)),
                ('cohort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Cohort')),
                ('product_teams', models.ManyToManyField(related_name='afternoon_attendace', related_query_name='afternoon_attendance_query', to='core.ProductTeam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.CreateModel(
            name='EveningAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('date', models.DateField()),
                ('plan_completed_sucessfully', models.BooleanField()),
                ('reason_not_completed', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('late_reason', models.TextField(blank=True, null=True)),
                ('score', models.SmallIntegerField()),
                ('is_staff', models.BooleanField(null=True)),
                ('cohort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Cohort')),
                ('product_teams', models.ManyToManyField(related_name='evening_attendace', related_query_name='evening_attendance_query', to='core.ProductTeam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.CreateModel(
            name='MorningAttendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('date', models.DateField()),
                ('plan_of_action', models.TextField()),
                ('problems_forseen', models.BooleanField()),
                ('requests', models.TextField(blank=True, null=True)),
                ('late_reason', models.TextField(blank=True, null=True)),
                ('score', models.SmallIntegerField()),
                ('is_staff', models.BooleanField(null=True)),
                ('cohort', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Cohort')),
                ('product_teams', models.ManyToManyField(related_name='morning_attendace', to='core.ProductTeam')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=(models.Model, model_mixins.Mixins),
        ),
        migrations.AlterUniqueTogether(
            name='morningattendance',
            unique_together={('date', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='eveningattendance',
            unique_together={('date', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='afternoonattendance',
            unique_together={('date', 'user')},
        ),
    ]
